'use client';

import React from 'react';
import clsx from 'clsx';
import styled, { extractStyling } from '@styles';
import { useSlotProps } from '@hooks';

export const {{ camelCase name }}Classes = {
  root: '{{ pascalCase name }}-Root'
};

const {{ pascalCase name }} = React.forwardRef((props, ref) => {
  const {
    children,
    slots = {},
    slotProps = {},
    ...otherProps
  } = props;

  const { cssStyles, other } = extractStyling(otherProps);

  const ownerState = {
    ...props,
  };

  const classes = {
    root: [
      {{ camelCase name }}Classes.root
    ],
  };

  const {{ pascalCase name }}Component = slots.root || {{ pascalCase name }}Root;

  const {{ camelCase name }}RootProps = useSlotProps({
    elementType: {{ pascalCase name }}Component,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: ref,
      slotProps: slotProps
    },
    ownerState,
    className: classes.root
  })

  return (
    <{{ pascalCase name }}Component {...{{ camelCase name }}RootProps}>
      {children}
    </{{ pascalCase name }}Component>
  );
});
{{ pascalCase name }}.displayName = '{{ pascalCase name }}';

export default {{ pascalCase name }};